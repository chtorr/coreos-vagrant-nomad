{"ignition":{"config":{},"timeouts":{},"version":"2.1.0"},"networkd":{},"passwd":{},"storage":{},"systemd":{"units":[{"mask":true,"name":"etcd2.service"},{"mask":true,"name":"fleet.service"},{"mask":true,"name":"flanneld.service"},{"mask":true,"name":"locksmithd.service"},{"dropins":[{"contents":"[Service]\nEnvironment=\"DOCKER_OPTS=--bip=172.16.0.1/16 --log-driver=journald --dns 172.16.0.1 --dns 8.8.8.8 --dns-search service.consul\"\n","name":"10-docker-opts.conf"}],"name":"docker.service"},{"contents":"[Unit]\nDescription=Create Docker Service Network\nRequires=docker.service\nAfter=docker.service\n\n[Install]\nWantedBy=multi-user.target\n\n[Service]\nType=oneshot        \nExecStart=/usr/bin/docker network create --subnet 172.30.0.1/16 --driver bridge service-net\n","enabled":true,"name":"docker-service-network.service"},{"contents":"[Unit]\nDescription=Docker Socket for the API\n\n[Socket]\nListenStream=2375\nService=docker.service\nBindIPv6Only=both\n\n[Install]\nWantedBy=sockets.target\n","enabled":true,"name":"docker-tcp.socket"},{"contents":"[Unit]\nDescription=Consul\nRequires=coreos-metadata.service docker.service\nAfter=coreos-metadata.service docker.service\n\n[Install]\nWantedBy=multi-user.target\n\n[Service]\nEnvironmentFile=/run/metadata/coreos\nEnvironment=DOCKER_IMAGE=consul:1.0.3\nRestart=on-failure\nRestartSec=30\nRestartPreventExitStatus=5\nSyslogIdentifier=consul\nStandardOutput=null\nExecStartPre=/usr/bin/docker pull $DOCKER_IMAGE\nExecStart=/usr/bin/docker run \\\n        -e CONSUL_BIND_INTERFACE=eth1 \\\n        -e 'CONSUL_LOCAL_CONFIG={\"skip_leave_on_interrupt\": true}' \\\n        -e 'CONSUL_ALLOW_PRIVILEGED_PORTS=' \\\n        --net=host \\\n        --name consul \\\n        $DOCKER_IMAGE \\\n        agent \\\n        -server \\\n        -bootstrap-expect=3 \\\n        -retry-join=\"172.17.8.101\" \\\n        -datacenter=vagrant \\\n        -advertise=${COREOS_VAGRANT_VIRTUALBOX_PRIVATE_IPV4} \\\n        -client=0.0.0.0 \\\n        -bind=0.0.0.0 \\\n        -node=${COREOS_VAGRANT_VIRTUALBOX_PRIVATE_IPV4} \\\n        -dns-port=53 \\\n        -recursor=8.8.8.8 \\\n        -ui=true\nExecStopPost=/usr/bin/docker rm consul\n","enabled":true,"name":"consul.service"},{"contents":"[Unit]\nDescription=Write Nomad Config file\nRequires=coreos-metadata.service consul.service\nAfter=coreos-metadata.service consul.service\n\n[Install]\nWantedBy=multi-user.target\n\n[Service]\nType=oneshot\nEnvironmentFile=/run/metadata/coreos\nEnvironment=FILE=/etc/nomad/server.hcl\nExecStart=/usr/bin/mkdir -p /etc/nomad\nExecStart=/usr/bin/bash -c 'printf \"\\\nlog_level = \\\\\\\"DEBUG\\\\\\\"\\n\\\ndata_dir = \\\\\\\"/var/nomad\\\\\\\"\\n\\\nbind_addr = \\\\\\\"0.0.0.0\\\\\\\"\\n\\\nadvertise {\\n\\\n  http = \\\\\\\"${COREOS_VAGRANT_VIRTUALBOX_PRIVATE_IPV4}\\\\\\\"\\n\\\n  rpc  = \\\\\\\"${COREOS_VAGRANT_VIRTUALBOX_PRIVATE_IPV4}\\\\\\\"\\n\\\n  serf = \\\\\\\"${COREOS_VAGRANT_VIRTUALBOX_PRIVATE_IPV4}\\\\\\\"\\n\\\n}\\n\\\nserver {\\n\\\n  enabled = true\\n\\\n  bootstrap_expect = 3\\n\\\n}\\n\\\nclient {\\n\\\n  enabled = true\\n\\\n  servers = [\\\\\\\"127.0.0.1:4647\\\\\\\"]\\n\\\n  network_interface=\\\\\\\"eth1\\\\\\\"\\n\\\n}\\n\" \u003e ${FILE}'\n","enabled":true,"name":"nomad-config.service"},{"contents":"[Unit]\nDescription=Download and run Nomad\nRequires=nomad-config.service\nAfter=nomad-config.service\nConditionPathExists=/etc/nomad/server.hcl\n\n[Install]\nWantedBy=multi-user.target\n\n[Service]\nEnvironmentFile=/run/metadata/coreos\nEnvironment=NOMAD_VERSION=0.7.1\nExecStartPre=/usr/bin/mkdir -p /opt/bin\nExecStartPre=/usr/bin/wget -P /tmp https://releases.hashicorp.com/nomad/${NOMAD_VERSION}/nomad_${NOMAD_VERSION}_linux_amd64.zip\nExecStartPre=/usr/bin/unzip /tmp/nomad_${NOMAD_VERSION}_linux_amd64.zip -d /opt/bin\nExecStartPre=/usr/bin/rm -f /tmp/nomad_${NOMAD_VERSION}_linux_amd64.zip\nExecStartPre=/usr/bin/chmod +x /opt/bin/nomad\nExecStart=/opt/bin/nomad agent -config /etc/nomad/server.hcl\n","enabled":true,"name":"nomad.service"},{"contents":"[Unit]\nDescription=Run Hashi-ui\nRequires=nomad.service\nAfter=nomad.service\n\n[Install]\nWantedBy=multi-user.target\n\n[Service]\nRestartSec=5\nRestart=always\nExecStart=/usr/bin/docker run \\\n    -e NOMAD_ENABLE=1 \\\n    -e CONSUL_ENABLE=1 \\\n    -e LOG_LEVEL=error \\\n    --net=host \\\n    jippi/hashi-ui\n","enabled":true,"name":"hashi-ui.service"}]}}