systemd:
  units:
    - name: etcd2.service
      mask: true
    - name: fleet.service
      mask: true
    - name: flanneld.service
      mask: true
    - name: locksmithd.service
      mask: true
    - name: docker.service
      dropins:
        - name: 10-docker-opts.conf
          contents: |
            [Service]
            Environment="DOCKER_OPTS=--bip=172.16.0.1/16 --log-driver=journald --dns 172.16.0.1 --dns 8.8.8.8 --dns-search service.consul"
    - name: docker-service-network.service
      enabled: true
      contents: |
        [Unit]
        Description=Create Docker Service Network
        Requires=docker.service
        After=docker.service

        [Install]
        WantedBy=multi-user.target

        [Service]
        Type=oneshot        
        ExecStart=/usr/bin/docker network create --subnet 172.30.0.1/16 --driver bridge service-net
    - name: docker-tcp.socket
      enabled: true
      contents: |
        [Unit]
        Description=Docker Socket for the API

        [Socket]
        ListenStream=2375
        Service=docker.service
        BindIPv6Only=both

        [Install]
        WantedBy=sockets.target
    - name: consul.service
      enabled: true
      contents: |
        [Unit]
        Description=Consul
        Requires=coreos-metadata.service docker.service
        After=coreos-metadata.service docker.service

        [Install]
        WantedBy=multi-user.target

        [Service]
        EnvironmentFile=/run/metadata/coreos
        Environment=DOCKER_IMAGE=consul:1.0.3
        Restart=on-failure
        RestartSec=30
        RestartPreventExitStatus=5
        SyslogIdentifier=consul
        StandardOutput=null
        ExecStartPre=/usr/bin/docker pull $DOCKER_IMAGE
        ExecStart=/usr/bin/docker run \
                -e CONSUL_BIND_INTERFACE=eth1 \
                -e 'CONSUL_LOCAL_CONFIG={"skip_leave_on_interrupt": true}' \
                -e 'CONSUL_ALLOW_PRIVILEGED_PORTS=' \
                --net=host \
                --name consul \
                $DOCKER_IMAGE \
                agent \
                -server \
                -bootstrap-expect=3 \
                -retry-join="172.17.8.101" \
                -datacenter=vagrant \
                -advertise=${COREOS_VAGRANT_VIRTUALBOX_PRIVATE_IPV4} \
                -client=0.0.0.0 \
                -bind=0.0.0.0 \
                -node=${COREOS_VAGRANT_VIRTUALBOX_PRIVATE_IPV4} \
                -dns-port=53 \
                -recursor=8.8.8.8 \
                -ui=true
        ExecStopPost=/usr/bin/docker rm consul
    - name: nomad-config.service
      enabled: true
      contents: |
        [Unit]
        Description=Write Nomad Config file
        Requires=coreos-metadata.service consul.service
        After=coreos-metadata.service consul.service

        [Install]
        WantedBy=multi-user.target

        [Service]
        Type=oneshot
        EnvironmentFile=/run/metadata/coreos
        Environment=FILE=/etc/nomad/server.hcl
        ExecStart=/usr/bin/mkdir -p /etc/nomad
        ExecStart=/usr/bin/bash -c 'printf "\
        log_level = \\\"DEBUG\\\"\n\
        data_dir = \\\"/var/nomad\\\"\n\
        bind_addr = \\\"0.0.0.0\\\"\n\
        advertise {\n\
          http = \\\"${COREOS_VAGRANT_VIRTUALBOX_PRIVATE_IPV4}\\\"\n\
          rpc  = \\\"${COREOS_VAGRANT_VIRTUALBOX_PRIVATE_IPV4}\\\"\n\
          serf = \\\"${COREOS_VAGRANT_VIRTUALBOX_PRIVATE_IPV4}\\\"\n\
        }\n\
        server {\n\
          enabled = true\n\
          bootstrap_expect = 3\n\
        }\n\
        client {\n\
          enabled = true\n\
          servers = [\\\"127.0.0.1:4647\\\"]\n\
          network_interface=\\\"eth1\\\"\n\
        }\n" > ${FILE}'
    - name: nomad.service
      enabled: true
      contents: |
        [Unit]
        Description=Download and run Nomad
        Requires=nomad-config.service
        After=nomad-config.service
        ConditionPathExists=/etc/nomad/server.hcl
        
        [Install]
        WantedBy=multi-user.target

        [Service]
        EnvironmentFile=/run/metadata/coreos
        Environment=NOMAD_VERSION=0.7.1
        ExecStartPre=/usr/bin/mkdir -p /opt/bin
        ExecStartPre=/usr/bin/wget -P /tmp https://releases.hashicorp.com/nomad/${NOMAD_VERSION}/nomad_${NOMAD_VERSION}_linux_amd64.zip
        ExecStartPre=/usr/bin/unzip /tmp/nomad_${NOMAD_VERSION}_linux_amd64.zip -d /opt/bin
        ExecStartPre=/usr/bin/rm -f /tmp/nomad_${NOMAD_VERSION}_linux_amd64.zip
        ExecStartPre=/usr/bin/chmod +x /opt/bin/nomad
        ExecStart=/opt/bin/nomad agent -config /etc/nomad/server.hcl
    - name: hashi-ui.service
      enabled: true
      contents: |
        [Unit]
        Description=Run Hashi-ui
        Requires=nomad.service
        After=nomad.service
        
        [Install]
        WantedBy=multi-user.target

        [Service]
        RestartSec=5
        Restart=always
        ExecStart=/usr/bin/docker run \
            -e NOMAD_ENABLE=1 \
            -e CONSUL_ENABLE=1 \
            -e LOG_LEVEL=error \
            --net=host \
            jippi/hashi-ui

